{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from \"react\";\nimport API from \"../../API\";\nexport const useHomeFetch = () => {\n  _s();\n\n  const initialState = {\n    page: 0,\n    results: [],\n    total_pages: 0,\n    total_results: 0\n  };\n  const [state, setState] = useState(initialState);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const fetchMovies = async (page, searchTerm = \"\") => {\n    try {\n      setError(false);\n      setLoading(true);\n      const movies = await API.fetchMovies(searchTerm, page);\n      setState(prev => ({ ...movies,\n        results: page > 1 ? [...prev.results, ...movies.results] : [...movies.results]\n      }));\n    } catch (error) {\n      setError(true);\n      console.log(error);\n    }\n\n    setLoading(false);\n    return {\n      state,\n      loading,\n      error\n    };\n  };\n\n  useEffect(() => {\n    fetchMovies(1);\n  }, []);\n};\n\n_s(useHomeFetch, \"q4tagMm7So+1aXnI+nbDMDTijyM=\");","map":{"version":3,"sources":["/home/ajinkya/Resources/React/movie-app/src/components/Hooks/useHomeFetch.js"],"names":["useState","useEffect","useRef","API","useHomeFetch","initialState","page","results","total_pages","total_results","state","setState","loading","setLoading","error","setError","fetchMovies","searchTerm","movies","prev","console","log"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AAEA,OAAOC,GAAP,MAAgB,WAAhB;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAC9B,QAAMC,YAAY,GAAG;AACjBC,IAAAA,IAAI,EAAE,CADW;AAEjBC,IAAAA,OAAO,EAAE,EAFQ;AAGjBC,IAAAA,WAAW,EAAE,CAHI;AAIjBC,IAAAA,aAAa,EAAE;AAJE,GAArB;AAOA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAACK,YAAD,CAAlC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,EAAlC;;AAEA,QAAMgB,WAAW,GAAG,OAAOV,IAAP,EAAaW,UAAU,GAAG,EAA1B,KAAiC;AACjD,QAAI;AACAF,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACAF,MAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,YAAMK,MAAM,GAAG,MAAMf,GAAG,CAACa,WAAJ,CAAgBC,UAAhB,EAA4BX,IAA5B,CAArB;AAEAK,MAAAA,QAAQ,CAAEQ,IAAD,KAAW,EAChB,GAAGD,MADa;AAEhBX,QAAAA,OAAO,EACHD,IAAI,GAAG,CAAP,GACM,CAAC,GAAGa,IAAI,CAACZ,OAAT,EAAkB,GAAGW,MAAM,CAACX,OAA5B,CADN,GAEM,CAAC,GAAGW,MAAM,CAACX,OAAX;AALM,OAAX,CAAD,CAAR;AAOH,KAbD,CAaE,OAAOO,KAAP,EAAc;AACZC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACH;;AAEDD,IAAAA,UAAU,CAAC,KAAD,CAAV;AAEA,WAAO;AAAEH,MAAAA,KAAF;AAASE,MAAAA,OAAT;AAAkBE,MAAAA;AAAlB,KAAP;AACH,GAtBD;;AAuBAb,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,WAAW,CAAC,CAAD,CAAX;AACH,GAFQ,EAEN,EAFM,CAAT;AAGH,CAtCM;;GAAMZ,Y","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\n\nimport API from \"../../API\";\n\nexport const useHomeFetch = () => {\n    const initialState = {\n        page: 0,\n        results: [],\n        total_pages: 0,\n        total_results: 0,\n    };\n\n    const [state, setState] = useState(initialState);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState();\n\n    const fetchMovies = async (page, searchTerm = \"\") => {\n        try {\n            setError(false);\n            setLoading(true);\n\n            const movies = await API.fetchMovies(searchTerm, page);\n\n            setState((prev) => ({\n                ...movies,\n                results:\n                    page > 1\n                        ? [...prev.results, ...movies.results]\n                        : [...movies.results],\n            }));\n        } catch (error) {\n            setError(true);\n            console.log(error);\n        }\n\n        setLoading(false);\n\n        return { state, loading, error };\n    };\n    useEffect(() => {\n        fetchMovies(1);\n    }, []);\n};\n"]},"metadata":{},"sourceType":"module"}