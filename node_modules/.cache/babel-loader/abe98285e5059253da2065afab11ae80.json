{"ast":null,"code":"var _jsxFileName = \"/home/ajinkya/Resources/React/movie-app/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE } from \"../config\";\nimport NoImage from \"../images/no_image.jpg\";\nimport Grid from \"./Grid\";\nimport HeroImage from \"./HeroImage\";\nimport { useHomeFetch } from \"./Hooks/useHomeFetch\";\nimport Thumb from \"./Thumb\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const {\n    state,\n    loading,\n    error\n  } = useHomeFetch();\n  console.log(state);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [state.results[0] ? /*#__PURE__*/_jsxDEV(HeroImage, {\n      image: `${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`,\n      title: state.results[0].original_title,\n      text: state.results[0].overview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this) : null, console.log(state.results), /*#__PURE__*/_jsxDEV(Grid, {\n      header: \"Popular Movies\",\n      children: [\"state.results.map((movie) =>\", \" \", /*#__PURE__*/_jsxDEV(Thumb, {\n        clickable: true,\n        image: movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` : NoImage\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Home, \"1TBnA7+ADydb+UrVYyBSP6YDrVg=\", false, function () {\n  return [useHomeFetch];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/ajinkya/Resources/React/movie-app/src/components/Home.js"],"names":["React","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","NoImage","Grid","HeroImage","useHomeFetch","Thumb","Home","state","loading","error","console","log","results","backdrop_path","original_title","overview","movie","poster_path","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,cAAT,EAAyBC,aAAzB,EAAwCC,WAAxC,QAA2D,WAA3D;AAEA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,SAASC,YAAT,QAA6B,sBAA7B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAA4BL,YAAY,EAA9C;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAEA,sBACI;AAAA,eACKA,KAAK,CAACK,OAAN,CAAc,CAAd,iBACG,QAAC,SAAD;AACI,MAAA,KAAK,EAAG,GAAEd,cAAe,GAAEC,aAAc,GAAEQ,KAAK,CAACK,OAAN,CAAc,CAAd,EAAiBC,aAAc,EAD9E;AAEI,MAAA,KAAK,EAAEN,KAAK,CAACK,OAAN,CAAc,CAAd,EAAiBE,cAF5B;AAGI,MAAA,IAAI,EAAEP,KAAK,CAACK,OAAN,CAAc,CAAd,EAAiBG;AAH3B;AAAA;AAAA;AAAA;AAAA,YADH,GAMG,IAPR,EAQKL,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,OAAlB,CARL,eASI,QAAC,IAAD;AAAM,MAAA,MAAM,EAAC,gBAAb;AAAA,iDACiC,GADjC,eAGQ,QAAC,KAAD;AAEI,QAAA,SAAS,EAAE,IAFf;AAGI,QAAA,KAAK,EACDI,KAAK,CAACC,WAAN,GACO,GAAEnB,cAAe,GAAEE,WAAY,GAAEgB,KAAK,CAACC,WAAY,EAD1D,GAEMhB;AANd,SACSe,KAAK,CAACE,EADf;AAAA;AAAA;AAAA;AAAA,cAHR;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA,kBADJ;AA2BH,CAhCD;;GAAMZ,I;UACgCF,Y;;;KADhCE,I;AAkCN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\n\nimport { IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE } from \"../config\";\n\nimport NoImage from \"../images/no_image.jpg\";\nimport Grid from \"./Grid\";\nimport HeroImage from \"./HeroImage\";\n\nimport { useHomeFetch } from \"./Hooks/useHomeFetch\";\nimport Thumb from \"./Thumb\";\n\nconst Home = () => {\n    const { state, loading, error } = useHomeFetch();\n\n    console.log(state);\n\n    return (\n        <>\n            {state.results[0] ? (\n                <HeroImage\n                    image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\n                    title={state.results[0].original_title}\n                    text={state.results[0].overview}\n                />\n            ) : null}\n            {console.log(state.results)}\n            <Grid header=\"Popular Movies\">\n                state.results.map((movie) =>{\" \"}\n                {\n                    <Thumb\n                        key={movie.id}\n                        clickable={true}\n                        image={\n                            movie.poster_path\n                                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n                                : NoImage\n                        }\n                    />\n                }\n                )\n            </Grid>\n        </>\n    );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}