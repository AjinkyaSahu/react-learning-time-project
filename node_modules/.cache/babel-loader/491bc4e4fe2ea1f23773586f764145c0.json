{"ast":null,"code":"var _jsxFileName = \"/home/ajinkya/Resources/React/movie-app/src/components/Movie/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\"; // Config\n\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../config\"; // Components\n\nimport BreadCrumb from \"../BreadCrumb\";\nimport Grid from \"../Grid\";\nimport Spinner from \"../Spinner\";\nimport MovieInfo from \"../MovieInfo\"; // Hook\n\nimport { useMovieFetch } from \"../../hooks/useMovieFetch\"; // Image\n\nimport NoImage from \"../../images/no_image.jpg\";\nimport MovieInfoBar from \"../MovieInfoBar\";\nimport Actor from \"../Actor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Movie = () => {\n  _s();\n\n  const {\n    movieId\n  } = useParams();\n  const {\n    state: movie,\n    loading,\n    error\n  } = useMovieFetch(movieId);\n  if (loading) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Something went wrong...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BreadCrumb, {\n      movieTitle: movie.original_title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n      movie: movie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MovieInfoBar, {\n      time: movie.runtime,\n      budget: movie.budget,\n      revenue: movie.revenue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      header: \"Actors\",\n      children: movie.actors.map(actor => /*#__PURE__*/_jsxDEV(Actor, {\n        name: actor.name,\n        character: movie.character,\n        imageUrl: actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}` : NoImage\n      }, actor.credit_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Movie, \"MFvN9GJ3GVLfd55hOP/zB0RDH6Y=\", false, function () {\n  return [useParams, useMovieFetch];\n});\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["/home/ajinkya/Resources/React/movie-app/src/components/Movie/index.js"],"names":["React","useParams","IMAGE_BASE_URL","POSTER_SIZE","BreadCrumb","Grid","Spinner","MovieInfo","useMovieFetch","NoImage","MovieInfoBar","Actor","Movie","movieId","state","movie","loading","error","original_title","runtime","budget","revenue","actors","map","actor","name","character","profile_path","credit_id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B,C,CACA;;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,cAA5C,C,CACA;;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,SAAP,MAAsB,cAAtB,C,CACA;;AACA,SAASC,aAAT,QAA8B,2BAA9B,C,CACA;;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAM;AAAEC,IAAAA;AAAF,MAAcZ,SAAS,EAA7B;AAEA,QAAM;AAAEa,IAAAA,KAAK,EAAEC,KAAT;AAAgBC,IAAAA,OAAhB;AAAyBC,IAAAA;AAAzB,MAAmCT,aAAa,CAACK,OAAD,CAAtD;AAEA,MAAIG,OAAJ,EAAa,oBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,sBACI;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,UAAU,EAAEF,KAAK,CAACG;AAA9B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEH;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,YAAD;AACI,MAAA,IAAI,EAAEA,KAAK,CAACI,OADhB;AAEI,MAAA,MAAM,EAAEJ,KAAK,CAACK,MAFlB;AAGI,MAAA,OAAO,EAAEL,KAAK,CAACM;AAHnB;AAAA;AAAA;AAAA;AAAA,YAHJ,eAQI,QAAC,IAAD;AAAM,MAAA,MAAM,EAAC,QAAb;AAAA,gBACKN,KAAK,CAACO,MAAN,CAAaC,GAAb,CAAkBC,KAAD,iBACd,QAAC,KAAD;AAEI,QAAA,IAAI,EAAEA,KAAK,CAACC,IAFhB;AAGI,QAAA,SAAS,EAAEV,KAAK,CAACW,SAHrB;AAII,QAAA,QAAQ,EACJF,KAAK,CAACG,YAAN,GACO,GAAEzB,cAAe,GAAEC,WAAY,GAAEqB,KAAK,CAACG,YAAa,EAD3D,GAEMlB;AAPd,SACSe,KAAK,CAACI,SADf;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA,kBADJ;AAyBH,CAjCD;;GAAMhB,K;UACkBX,S,EAEqBO,a;;;KAHvCI,K;AAmCN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n// Config\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../config\";\n// Components\nimport BreadCrumb from \"../BreadCrumb\";\nimport Grid from \"../Grid\";\nimport Spinner from \"../Spinner\";\nimport MovieInfo from \"../MovieInfo\";\n// Hook\nimport { useMovieFetch } from \"../../hooks/useMovieFetch\";\n// Image\nimport NoImage from \"../../images/no_image.jpg\";\nimport MovieInfoBar from \"../MovieInfoBar\";\nimport Actor from \"../Actor\";\n\nconst Movie = () => {\n    const { movieId } = useParams();\n\n    const { state: movie, loading, error } = useMovieFetch(movieId);\n\n    if (loading) return <Spinner />;\n    if (error) return <div>Something went wrong...</div>;\n\n    return (\n        <>\n            <BreadCrumb movieTitle={movie.original_title} />\n            <MovieInfo movie={movie} />\n            <MovieInfoBar\n                time={movie.runtime}\n                budget={movie.budget}\n                revenue={movie.revenue}\n            />\n            <Grid header=\"Actors\">\n                {movie.actors.map((actor) => (\n                    <Actor\n                        key={actor.credit_id}\n                        name={actor.name}\n                        character={movie.character}\n                        imageUrl={\n                            actor.profile_path\n                                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\n                                : NoImage\n                        }\n                    />\n                ))}\n            </Grid>\n        </>\n    );\n};\n\nexport default Movie;\n"]},"metadata":{},"sourceType":"module"}