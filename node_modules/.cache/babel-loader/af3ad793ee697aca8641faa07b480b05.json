{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport API from \"../API\";\nexport const useMovieFetch = movieId => {\n  _s();\n\n  const [state, setstate] = useState();\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchMovieData = async () => {\n      try {\n        setLoading(true);\n        setError(false);\n        const movie = await API.fetchMovie(movieId);\n        const credits = await API.fetchCredits(movieId); // get directors only\n\n        const directors = credits.crew.filter(member => member.job === \"Director\");\n        setstate({ ...movie,\n          actors: credits.cast,\n          directors\n        });\n        setLoading(false);\n      } catch (error) {\n        setError(true);\n      }\n    };\n\n    fetchMovieData();\n  }, [movieId]);\n  return {\n    state,\n    loading,\n    error\n  };\n};\n\n_s(useMovieFetch, \"L2iSks2Ps8YVjYud3mcWszkStiI=\");","map":{"version":3,"sources":["/home/ajinkya/Resources/React/movie-app/src/Hooks/useMovieFetch.js"],"names":["useEffect","useState","API","useMovieFetch","movieId","state","setstate","error","setError","loading","setLoading","fetchMovieData","movie","fetchMovie","credits","fetchCredits","directors","crew","filter","member","job","actors","cast"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,GAAP,MAAgB,QAAhB;AAEA,OAAO,MAAMC,aAAa,GAAIC,OAAD,IAAa;AAAA;;AACtC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,EAAlC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,cAAc,GAAG,YAAY;AAC/B,UAAI;AACAD,QAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,QAAAA,QAAQ,CAAC,KAAD,CAAR;AAEA,cAAMI,KAAK,GAAG,MAAMV,GAAG,CAACW,UAAJ,CAAeT,OAAf,CAApB;AACA,cAAMU,OAAO,GAAG,MAAMZ,GAAG,CAACa,YAAJ,CAAiBX,OAAjB,CAAtB,CALA,CAMA;;AACA,cAAMY,SAAS,GAAGF,OAAO,CAACG,IAAR,CAAaC,MAAb,CACbC,MAAD,IAAYA,MAAM,CAACC,GAAP,KAAe,UADb,CAAlB;AAIAd,QAAAA,QAAQ,CAAC,EACL,GAAGM,KADE;AAELS,UAAAA,MAAM,EAAEP,OAAO,CAACQ,IAFX;AAGLN,UAAAA;AAHK,SAAD,CAAR;AAMAN,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAlBD,CAkBE,OAAOH,KAAP,EAAc;AACZC,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;AACJ,KAtBD;;AAwBAG,IAAAA,cAAc;AACjB,GA1BQ,EA0BN,CAACP,OAAD,CA1BM,CAAT;AA4BA,SAAO;AAAEC,IAAAA,KAAF;AAASI,IAAAA,OAAT;AAAkBF,IAAAA;AAAlB,GAAP;AACH,CAlCM;;GAAMJ,a","sourcesContent":["import { useEffect, useState } from \"react\";\n\nimport API from \"../API\";\n\nexport const useMovieFetch = (movieId) => {\n    const [state, setstate] = useState();\n    const [error, setError] = useState(false);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchMovieData = async () => {\n            try {\n                setLoading(true);\n                setError(false);\n\n                const movie = await API.fetchMovie(movieId);\n                const credits = await API.fetchCredits(movieId);\n                // get directors only\n                const directors = credits.crew.filter(\n                    (member) => member.job === \"Director\"\n                );\n\n                setstate({\n                    ...movie,\n                    actors: credits.cast,\n                    directors,\n                });\n\n                setLoading(false);\n            } catch (error) {\n                setError(true);\n            }\n        };\n\n        fetchMovieData();\n    }, [movieId]);\n\n    return { state, loading, error };\n};\n"]},"metadata":{},"sourceType":"module"}