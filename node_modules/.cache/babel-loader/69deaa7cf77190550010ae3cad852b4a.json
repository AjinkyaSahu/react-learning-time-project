{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from \"react\";\nimport API from \"../../API\";\nconst initialState = {\n  page: 0,\n  results: [],\n  total_pages: 0,\n  total_results: 0\n};\nconst [state, setState] = useState(initialState);\nconst [loading, setLoading] = useState(false);\nconst [error, setError] = useState();\nexport const useHomefetch = async (page, searchTerm = \"\") => {\n  _s();\n\n  try {\n    setError(false);\n    setLoading(true);\n    const movies = await API.fetchMovies(searchTerm, page);\n    setState(prev => ({ ...movies,\n      results: page > 1 ? [...prev.results, ...movies.results] : [...movies.results]\n    }));\n  } catch (error) {\n    setError(true);\n    console.log(error);\n  }\n\n  setLoading(false);\n  useEffect(() => {\n    fetchMovies(1);\n  }, []);\n  return {\n    state,\n    loading,\n    error\n  };\n};\n\n_s(useHomefetch, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");","map":{"version":3,"sources":["/home/ajinkya/Resources/React/movie-app/src/components/Hooks/useHomeFetch.js"],"names":["useState","useEffect","useRef","API","initialState","page","results","total_pages","total_results","state","setState","loading","setLoading","error","setError","useHomefetch","searchTerm","movies","fetchMovies","prev","console","log"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AAEA,OAAOC,GAAP,MAAgB,WAAhB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,CADa;AAEnBC,EAAAA,OAAO,EAAE,EAFU;AAGnBC,EAAAA,WAAW,EAAE,CAHM;AAInBC,EAAAA,aAAa,EAAE;AAJI,CAArB;AAOA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAACI,YAAD,CAAlC;AACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AACA,MAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,EAAlC;AAEA,OAAO,MAAMe,YAAY,GAAG,OAAOV,IAAP,EAAaW,UAAU,GAAG,EAA1B,KAAiC;AAAA;;AAC3D,MAAI;AACFF,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAF,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,UAAMK,MAAM,GAAG,MAAMd,GAAG,CAACe,WAAJ,CAAgBF,UAAhB,EAA4BX,IAA5B,CAArB;AAEAK,IAAAA,QAAQ,CAAES,IAAD,KAAW,EAClB,GAAGF,MADe;AAElBX,MAAAA,OAAO,EACLD,IAAI,GAAG,CAAP,GAAW,CAAC,GAAGc,IAAI,CAACb,OAAT,EAAkB,GAAGW,MAAM,CAACX,OAA5B,CAAX,GAAkD,CAAC,GAAGW,MAAM,CAACX,OAAX;AAHlC,KAAX,CAAD,CAAR;AAKD,GAXD,CAWE,OAAOO,KAAP,EAAc;AACdC,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACD;;AAEDD,EAAAA,UAAU,CAAC,KAAD,CAAV;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,WAAW,CAAC,CAAD,CAAX;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO;AAAET,IAAAA,KAAF;AAASE,IAAAA,OAAT;AAAkBE,IAAAA;AAAlB,GAAP;AACD,CAxBM;;GAAME,Y","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\n\nimport API from \"../../API\";\n\nconst initialState = {\n  page: 0,\n  results: [],\n  total_pages: 0,\n  total_results: 0,\n};\n\nconst [state, setState] = useState(initialState);\nconst [loading, setLoading] = useState(false);\nconst [error, setError] = useState();\n\nexport const useHomefetch = async (page, searchTerm = \"\") => {\n  try {\n    setError(false);\n    setLoading(true);\n\n    const movies = await API.fetchMovies(searchTerm, page);\n\n    setState((prev) => ({\n      ...movies,\n      results:\n        page > 1 ? [...prev.results, ...movies.results] : [...movies.results],\n    }));\n  } catch (error) {\n    setError(true);\n    console.log(error);\n  }\n\n  setLoading(false);\n\n  useEffect(() => {\n    fetchMovies(1);\n  }, []);\n\n  return { state, loading, error };\n};\n"]},"metadata":{},"sourceType":"module"}