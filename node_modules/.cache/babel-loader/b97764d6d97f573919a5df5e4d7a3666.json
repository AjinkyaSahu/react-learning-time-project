{"ast":null,"code":"import _regeneratorRuntime from\"/home/ajinkya/Resources/React/movie-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/home/ajinkya/Resources/React/movie-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/home/ajinkya/Resources/React/movie-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/ajinkya/Resources/React/movie-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from\"react\";import{isPersistedState}from\"../helpers\";import API from\"../API\";export var useMovieFetch=function useMovieFetch(movieId){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setstate=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],setLoading=_useState6[1];var fetchMovieData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var movie,credits,directors;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;setLoading(true);setError(false);_context.next=5;return API.fetchMovie(movieId);case 5:movie=_context.sent;_context.next=8;return API.fetchCredits(movieId);case 8:credits=_context.sent;// get directors only\ndirectors=credits.crew.filter(function(member){return member.job===\"Director\";});setstate(_objectSpread(_objectSpread({},movie),{},{actors:credits.cast,directors:directors}));setLoading(false);_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](0);setError(true);case 17:case\"end\":return _context.stop();}}},_callee,null,[[0,14]]);}));return function fetchMovieData(){return _ref.apply(this,arguments);};}();useEffect(function(){var sessionState=isPersistedState(movieId);if(sessionState){setstate(sessionState);setLoading(false);return;}fetchMovieData();},[movieId]);// Write to sessionStorage\nuseEffect(function(){sessionStorage.setItem(movieId,JSON.stringify(state));},[movieId,state]);return{state:state,loading:loading,error:error};};","map":{"version":3,"sources":["/home/ajinkya/Resources/React/movie-app/src/hooks/useMovieFetch.js"],"names":["useEffect","useState","isPersistedState","API","useMovieFetch","movieId","state","setstate","error","setError","loading","setLoading","fetchMovieData","fetchMovie","movie","fetchCredits","credits","directors","crew","filter","member","job","actors","cast","sessionState","sessionStorage","setItem","JSON","stringify"],"mappings":"onBAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CAEA,OAASC,gBAAT,KAAiC,YAAjC,CAEA,MAAOC,CAAAA,GAAP,KAAgB,QAAhB,CAEA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,OAAD,CAAa,CACtC,cAA0BJ,QAAQ,CAAC,EAAD,CAAlC,wCAAOK,KAAP,eAAcC,QAAd,eACA,eAA0BN,QAAQ,CAAC,KAAD,CAAlC,yCAAOO,KAAP,eAAcC,QAAd,eACA,eAA8BR,QAAQ,CAAC,IAAD,CAAtC,yCAAOS,OAAP,eAAgBC,UAAhB,eAEA,GAAMC,CAAAA,cAAc,0FAAG,+KAEfD,UAAU,CAAC,IAAD,CAAV,CACAF,QAAQ,CAAC,KAAD,CAAR,CAHe,sBAKKN,CAAAA,GAAG,CAACU,UAAJ,CAAeR,OAAf,CALL,QAKTS,KALS,qCAMOX,CAAAA,GAAG,CAACY,YAAJ,CAAiBV,OAAjB,CANP,QAMTW,OANS,eAOf;AACMC,SARS,CAQGD,OAAO,CAACE,IAAR,CAAaC,MAAb,CACd,SAACC,MAAD,QAAYA,CAAAA,MAAM,CAACC,GAAP,GAAe,UAA3B,EADc,CARH,CAYfd,QAAQ,gCACDO,KADC,MAEJQ,MAAM,CAAEN,OAAO,CAACO,IAFZ,CAGJN,SAAS,CAATA,SAHI,GAAR,CAMAN,UAAU,CAAC,KAAD,CAAV,CAlBe,iFAoBfF,QAAQ,CAAC,IAAD,CAAR,CApBe,qEAAH,kBAAdG,CAAAA,cAAc,0CAApB,CAwBAZ,SAAS,CAAC,UAAM,CACZ,GAAMwB,CAAAA,YAAY,CAAGtB,gBAAgB,CAACG,OAAD,CAArC,CAEA,GAAImB,YAAJ,CAAkB,CACdjB,QAAQ,CAACiB,YAAD,CAAR,CACAb,UAAU,CAAC,KAAD,CAAV,CACA,OACH,CAEDC,cAAc,GACjB,CAVQ,CAUN,CAACP,OAAD,CAVM,CAAT,CAYA;AACAL,SAAS,CAAC,UAAM,CACZyB,cAAc,CAACC,OAAf,CAAuBrB,OAAvB,CAAgCsB,IAAI,CAACC,SAAL,CAAetB,KAAf,CAAhC,EACH,CAFQ,CAEN,CAACD,OAAD,CAAUC,KAAV,CAFM,CAAT,CAGA,MAAO,CAAEA,KAAK,CAALA,KAAF,CAASI,OAAO,CAAPA,OAAT,CAAkBF,KAAK,CAALA,KAAlB,CAAP,CACH,CA9CM","sourcesContent":["import { useEffect, useState } from \"react\";\n\nimport { isPersistedState } from \"../helpers\";\n\nimport API from \"../API\";\n\nexport const useMovieFetch = (movieId) => {\n    const [state, setstate] = useState([]);\n    const [error, setError] = useState(false);\n    const [loading, setLoading] = useState(true);\n\n    const fetchMovieData = async () => {\n        try {\n            setLoading(true);\n            setError(false);\n\n            const movie = await API.fetchMovie(movieId);\n            const credits = await API.fetchCredits(movieId);\n            // get directors only\n            const directors = credits.crew.filter(\n                (member) => member.job === \"Director\"\n            );\n\n            setstate({\n                ...movie,\n                actors: credits.cast,\n                directors,\n            });\n\n            setLoading(false);\n        } catch (error) {\n            setError(true);\n        }\n    };\n\n    useEffect(() => {\n        const sessionState = isPersistedState(movieId);\n\n        if (sessionState) {\n            setstate(sessionState);\n            setLoading(false);\n            return;\n        }\n\n        fetchMovieData();\n    }, [movieId]);\n\n    // Write to sessionStorage\n    useEffect(() => {\n        sessionStorage.setItem(movieId, JSON.stringify(state));\n    }, [movieId, state]);\n    return { state, loading, error };\n};\n"]},"metadata":{},"sourceType":"module"}