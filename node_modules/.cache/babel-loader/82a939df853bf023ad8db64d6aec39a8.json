{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport API from \"../API\";\nconst initialState = {\n  page: 0,\n  results: [],\n  total_pages: 0,\n  total_results: 0\n};\nexport const useHomeFetch = () => {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [state, setState] = useState(initialState);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const fetchMovies = async (page, searchTerm = \"\") => {\n    try {\n      setError(false);\n      setLoading(true);\n      const movies = await API.fetchMovies(searchTerm, page);\n      setState(prev => ({ ...movies,\n        results: page > 1 ? [...prev.results, ...movies.results] : [...movies.results]\n      }));\n      console.log(state);\n    } catch (error) {\n      setError(true);\n      console.log(error);\n    }\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchMovies(1, searchTerm = searchTerm);\n  }, [searchTerm]);\n  return {\n    state,\n    loading,\n    error,\n    searchTerm,\n    setSearchTerm\n  };\n};\n\n_s(useHomeFetch, \"xU7Xddy9LgTvoRZ+HOhtFh2SsY8=\");","map":{"version":3,"sources":["/home/ajinkya/Resources/React/movie-app/src/Hooks/useHomeFetch.js"],"names":["useState","useEffect","API","initialState","page","results","total_pages","total_results","useHomeFetch","searchTerm","setSearchTerm","state","setState","loading","setLoading","error","setError","fetchMovies","movies","prev","console","log"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,GAAP,MAAgB,QAAhB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,CADW;AAEjBC,EAAAA,OAAO,EAAE,EAFQ;AAGjBC,EAAAA,WAAW,EAAE,CAHI;AAIjBC,EAAAA,aAAa,EAAE;AAJE,CAArB;AAOA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAACG,YAAD,CAAlC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,EAAlC;;AAEA,QAAMiB,WAAW,GAAG,OAAOb,IAAP,EAAaK,UAAU,GAAG,EAA1B,KAAiC;AACjD,QAAI;AACAO,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACAF,MAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,YAAMI,MAAM,GAAG,MAAMhB,GAAG,CAACe,WAAJ,CAAgBR,UAAhB,EAA4BL,IAA5B,CAArB;AAEAQ,MAAAA,QAAQ,CAAEO,IAAD,KAAW,EAChB,GAAGD,MADa;AAEhBb,QAAAA,OAAO,EACHD,IAAI,GAAG,CAAP,GACM,CAAC,GAAGe,IAAI,CAACd,OAAT,EAAkB,GAAGa,MAAM,CAACb,OAA5B,CADN,GAEM,CAAC,GAAGa,MAAM,CAACb,OAAX;AALM,OAAX,CAAD,CAAR;AAOAe,MAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACH,KAdD,CAcE,OAAOI,KAAP,EAAc;AACZC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACH;;AAEDD,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GArBD;;AAuBAb,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,WAAW,CAAC,CAAD,EAAKR,UAAU,GAAGA,UAAlB,CAAX;AACH,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;AAIA,SAAO;AAAEE,IAAAA,KAAF;AAASE,IAAAA,OAAT;AAAkBE,IAAAA,KAAlB;AAAyBN,IAAAA,UAAzB;AAAqCC,IAAAA;AAArC,GAAP;AACH,CAlCM;;GAAMF,Y","sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport API from \"../API\";\n\nconst initialState = {\n    page: 0,\n    results: [],\n    total_pages: 0,\n    total_results: 0,\n};\n\nexport const useHomeFetch = () => {\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [state, setState] = useState(initialState);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState();\n\n    const fetchMovies = async (page, searchTerm = \"\") => {\n        try {\n            setError(false);\n            setLoading(true);\n\n            const movies = await API.fetchMovies(searchTerm, page);\n\n            setState((prev) => ({\n                ...movies,\n                results:\n                    page > 1\n                        ? [...prev.results, ...movies.results]\n                        : [...movies.results],\n            }));\n            console.log(state);\n        } catch (error) {\n            setError(true);\n            console.log(error);\n        }\n\n        setLoading(false);\n    };\n\n    useEffect(() => {\n        fetchMovies(1, (searchTerm = searchTerm));\n    }, [searchTerm]);\n\n    return { state, loading, error, searchTerm, setSearchTerm };\n};\n"]},"metadata":{},"sourceType":"module"}